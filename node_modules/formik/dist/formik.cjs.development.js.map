{"version":3,"file":"formik.cjs.development.js","sources":["../src/utils.ts","../src/FormikContext.tsx","../src/Formik.tsx","../src/Field.tsx","../src/Form.tsx","../src/withFormik.tsx","../src/connect.tsx","../src/FieldArray.tsx","../src/ErrorMessage.tsx"],"sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via its path.\n * @see https://github.com/developit/linkstate\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = {};\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (resVal[currentPath]) {\n      resVal = resVal[currentPath];\n    } else if (currentObj) {\n      resVal = resVal[currentPath] = cloneDeep(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  const result = { ...obj, ...res };\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete result[pathArray[i]];\n  }\n\n  return result;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\n// Assertions\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): boolean =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Make a promise cancellable by @istarkov\n * @see https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n */\nexport function makeCancelable<T extends Promise<any>>(\n  promise: T\n): [T, () => void] {\n  let hasCanceled: boolean = false;\n\n  const wrappedPromise: any = new Promise((resolve, reject) => {\n    promise.then(\n      val => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)),\n      error => (hasCanceled ? reject({ isCanceled: true }) : reject(error))\n    );\n  });\n\n  return [\n    wrappedPromise,\n    function cancel() {\n      hasCanceled = true;\n    },\n  ];\n}\n","import * as React from 'react';\nimport { FormikContext } from './types';\n\nconst PrivateFormikContext = React.createContext<FormikContext<any>>({} as any);\nexport const FormikProvider = PrivateFormikContext.Provider;\nexport const FormikConsumer = PrivateFormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  return React.useContext<FormikContext<Values>>(PrivateFormikContext);\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  makeCancelable,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport warning from 'tiny-warning';\n\n// We already used FormikActions. So we'll go all Elm-y, and use Message.\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | { type: 'SET_FORMIK_STATE'; payload: FormikState<Values> }\n  | { type: 'RESET_FORM'; payload: FormikState<Values> };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n    case 'SET_FORMIK_STATE':\n      return { ...state, ...msg.payload };\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function useFormik<Values = object>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  isInitialValid = false,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = { validateOnChange, validateOnBlur, isInitialValid, ...rest };\n  const initialValues = React.useRef(props.initialValues);\n  const isMounted = React.useRef<boolean>(false);\n  const fields = React.useRef<{\n    [field: string]: {\n      validate: (value: any) => string | Promise<string> | undefined;\n    };\n  }>({});\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: {},\n    touched: {},\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidationAsEffect = React.useCallback(\n    () => {\n      const [validate, cancel] = makeCancelable(validateForm(state.values));\n      validate.then(x => x).catch(x => x); // catch the rejection silently\n      return cancel;\n    },\n    [state.values]\n  );\n\n  React.useEffect(\n    () => {\n      if (!!validateOnChange && !state.isSubmitting && isMounted.current) {\n        return runValidationAsEffect();\n      }\n      return;\n    },\n    [state.values]\n  );\n\n  React.useEffect(\n    () => {\n      if (!!validateOnBlur && !state.isSubmitting && isMounted.current) {\n        return runValidationAsEffect();\n      }\n      return;\n    },\n    [state.touched]\n  );\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const imperativeMethods = {\n    resetForm,\n    submitForm,\n    validateForm,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n  };\n\n  function registerField(name: string, { validate }: any) {\n    if (fields.current !== null) {\n      fields.current[name] = {\n        validate,\n      };\n    }\n  }\n\n  function unregisterField(name: string) {\n    if (fields.current !== null) {\n      delete fields.current[name];\n    }\n  }\n\n  function handleBlur(eventOrString: any): void | ((e: any) => void) {\n    if (isString(eventOrString)) {\n      return event => executeBlur(event, eventOrString);\n    } else {\n      executeBlur(eventOrString);\n    }\n\n    function executeBlur(e: any, path?: string) {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && process.env.NODE_ENV !== 'production') {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: { field, value: true },\n      });\n    }\n  }\n\n  function handleChange(\n    eventOrPath: string | React.ChangeEvent<any>\n  ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) {\n    if (isString(eventOrPath)) {\n      return event => executeChange(event, eventOrPath);\n    } else {\n      executeChange(eventOrPath);\n    }\n\n    function executeChange(\n      eventOrTextValue: string | React.ChangeEvent<any>,\n      maybePath?: string\n    ) {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as React.ChangeEvent<any>).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n        } = (eventOrTextValue as React.ChangeEvent<any>).target;\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && process.env.NODE_ENV !== 'production') {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) ? checked : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        dispatch({ type: 'SET_FIELD_VALUE', payload: { field, value: val } });\n      }\n    }\n  }\n\n  function handleReset() {\n    if (props.onReset) {\n      const maybePromisedOnReset = (props.onReset as any)(\n        state.values,\n        imperativeMethods\n      );\n\n      if (isPromise(maybePromisedOnReset)) {\n        (maybePromisedOnReset as Promise<any>).then(resetForm);\n      } else {\n        resetForm();\n      }\n    } else {\n      resetForm();\n    }\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement> | undefined) {\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n\n    // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      typeof document !== 'undefined'\n    ) {\n      // Safely get the active element (works with IE)\n      const activeElement = getActiveElement();\n      if (\n        activeElement !== null &&\n        activeElement instanceof HTMLButtonElement\n      ) {\n        warning(\n          activeElement.attributes &&\n            activeElement.attributes.getNamedItem('type'),\n          'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n        );\n      }\n    }\n\n    submitForm();\n  }\n\n  function executeSubmit() {\n    return props.onSubmit(state.values, imperativeMethods);\n  }\n\n  function resetForm(nextValues?: Values) {\n    const values = nextValues\n      ? nextValues\n      : initialValues.current !== null\n        ? initialValues.current\n        : props.initialValues;\n    initialValues.current = values;\n    dispatch({\n      type: 'RESET_FORM',\n      payload: {\n        isSubmitting: false,\n        errors: {},\n        touched: {},\n        status: undefined,\n        values,\n        isValidating: false,\n        submitCount: 0,\n      },\n    });\n  }\n\n  function setTouched(touched: FormikTouched<Values>) {\n    dispatch({ type: 'SET_TOUCHED', payload: touched });\n  }\n\n  function setErrors(errors: FormikErrors<Values>) {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }\n\n  function setValues(values: Values) {\n    dispatch({ type: 'SET_VALUES', payload: values });\n  }\n\n  function setFieldError(field: string, value: string | undefined) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: { field, value },\n    });\n  }\n\n  function setFieldValue(\n    field: string,\n    value: any\n    // shouldValidate: boolean = true\n  ) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field,\n        value,\n      },\n    });\n  }\n\n  function setFieldTouched(\n    field: string,\n    touched: boolean = true\n    // shouldValidate: boolean = true\n  ) {\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field,\n        value: touched,\n      },\n    });\n  }\n\n  function validateField(name: string) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (\n      fields.current !== null &&\n      fields.current[name] &&\n      fields.current[name].validate &&\n      isFunction(fields.current[name].validate)\n    ) {\n      const value = getIn(state.values, name);\n      const maybePromise = fields.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x, (e: any) => e)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function runValidateHandler(\n    values: Values,\n    field?: string\n  ): Promise<FormikErrors<Values>> {\n    return new Promise(resolve => {\n      const maybePromisedErrors = (props.validate as any)(values, field);\n      if (maybePromisedErrors === undefined) {\n        resolve({});\n      } else if (isPromise(maybePromisedErrors)) {\n        (maybePromisedErrors as Promise<any>).then(\n          () => {\n            resolve({});\n          },\n          errors => {\n            resolve(errors);\n          }\n        );\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  function runValidationSchema(values: Values, field?: string) {\n    return new Promise(resolve => {\n      const { validationSchema } = props;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      let promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      promise.then(\n        () => {\n          resolve({});\n        },\n        (err: any) => {\n          resolve(yupToFormErrors(err));\n        }\n      );\n    });\n  }\n\n  function runSingleFieldLevelValidation(\n    field: string,\n    value: void | string\n  ): Promise<string> {\n    return new Promise(resolve =>\n      resolve(fields.current[field].validate(value))\n    ).then(x => x, e => e);\n  }\n\n  function runFieldLevelValidations(\n    values: Values\n  ): Promise<FormikErrors<Values>> {\n    if (fields.current === null) {\n      return Promise.resolve({});\n    }\n    const fieldKeysWithValidation: string[] = Object.keys(\n      fields.current\n    ).filter(\n      f =>\n        fields.current !== null &&\n        fields.current[f] &&\n        fields.current[f].validate &&\n        isFunction(fields.current[f].validate)\n    );\n\n    // Construct an array with all of the field validation functions\n    const fieldValidations: Promise<string>[] =\n      fieldKeysWithValidation.length > 0\n        ? fieldKeysWithValidation.map(f =>\n            runSingleFieldLevelValidation(f, getIn(values, f))\n          )\n        : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n      fieldErrorsList.reduce(\n        (prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (!!curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        },\n        {} as FormikErrors<Values>\n      )\n    );\n  }\n\n  /**\n   * Run all validations methods and update state accordingly\n   */\n  function validateForm(\n    values: Values = state.values\n  ): Promise<FormikErrors<Values>> {\n    if (\n      props.validationSchema ||\n      props.validate ||\n      (fields.current &&\n        Object.keys(fields.current).filter(\n          key => !!fields.current[key].validate\n        ).length > 0)\n    ) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        if (!isEqual(state.errors, combinedErrors)) {\n          dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n        }\n        dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        return combinedErrors;\n      });\n    } else {\n      return Promise.resolve({});\n    }\n  }\n\n  function setFormikState(\n    stateOrCb:\n      | FormikState<Values>\n      | ((state: FormikState<Values>) => FormikState<Values>)\n  ): void {\n    if (isFunction(stateOrCb)) {\n      dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb(state) });\n    } else {\n      dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n    }\n  }\n\n  function setStatus(status: any) {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }\n\n  function setSubmitting(isSubmitting: boolean) {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }\n\n  function submitForm() {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateForm().then((combinedErrors: FormikErrors<Values>) => {\n      const isActuallyValid = Object.keys(combinedErrors).length === 0;\n      if (isActuallyValid) {\n        Promise.resolve(executeSubmit())\n          .then(() => {\n            if (isMounted.current) {\n              dispatch({ type: 'SUBMIT_SUCCESS' });\n            }\n          })\n          .catch(_errors => {\n            if (isMounted.current) {\n              dispatch({ type: 'SUBMIT_FAILURE' });\n            }\n          });\n      } else if (isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before calling setState\n        dispatch({ type: 'SUBMIT_FAILURE' });\n      }\n    });\n  }\n\n  function getFieldProps(\n    name: string,\n    type: string\n  ): [\n    {\n      value: any;\n      name: string;\n      onChange: ((e: React.ChangeEvent<any>) => void);\n      onBlur: ((e: any) => void);\n    },\n    {\n      value: any;\n      error?: string | undefined;\n      touch: boolean;\n      initialValue?: any;\n    }\n  ] {\n    const field = {\n      name,\n      value:\n        type && (type === 'radio' || type === 'checkbox')\n          ? undefined // React uses checked={} for these inputs\n          : getIn(state.values, name),\n      onChange: handleChange,\n      onBlur: handleBlur,\n    };\n\n    return [field, getFieldMeta(name)];\n  }\n\n  function getFieldMeta(name: string) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touch: getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n    } as {\n      value: any;\n      error?: string;\n      touch: boolean;\n      initialValue?: any;\n    };\n  }\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      dirty\n        ? state.errors && Object.keys(state.errors).length === 0\n        : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean),\n    [state.errors, dirty, isInitialValid]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current || props.initialValues,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    validateOnBlur,\n    validateOnChange,\n  };\n\n  return ctx;\n}\n\nexport function Formik<Values = object, ExtraProps = {}>(\n  props: FormikConfig<Values> & ExtraProps\n) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render } = props;\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n          ? render(formikbag)\n          : children // children come last, always called\n            ? isFunction(children)\n              ? (children as ((bag: FormikProps<Values>) => React.ReactNode))(\n                  formikbag as FormikProps<Values>\n                )\n              : !isEmptyChildren(children)\n                ? React.Children.only(children)\n                : null\n            : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: any = {} as FormikErrors<Values>;\n  if (yupError.inner.length === 0) {\n    return setIn(errors, yupError.path, yupError.message);\n  }\n  for (let err of yupError.inner) {\n    if (!errors[err.path]) {\n      errors = setIn(errors, err.path, err.message);\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  let validateData: Partial<T> = {};\n  for (let k in values) {\n    if (values.hasOwnProperty(k)) {\n      const key = String(k);\n      validateData[key] = values[key] !== '' ? values[key] : undefined;\n    }\n  }\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n","import * as React from 'react';\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikHandlers,\n} from './types';\nimport { useFormikContext } from './FormikContext';\nimport { isFunction, isEmptyChildren } from './utils';\nimport warning from 'tiny-warning';\n\nexport interface FieldProps<V = any> {\n  field: {\n    /** Classic React change handler, keyed by input name */\n    onChange: FormikHandlers['handleChange'];\n    /** Mark input as touched */\n    onBlur: FormikHandlers['handleBlur'];\n    /** Value of the input */\n    value: any;\n    /* name of the input */\n    name: string;\n  };\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport interface FieldConfig {\n  /**\n   * Field component to render. Can either be a string like 'select' or a component.\n   */\n  component?:\n    | string\n    | React.ComponentType<FieldProps<any>>\n    | React.ComponentType<void>;\n\n  /**\n   * Render prop (works like React router's <Route render={props =>} />)\n   */\n  render?: ((props: FieldProps<any>) => React.ReactNode);\n\n  /**\n   * Children render function <Field name>{props => ...}</Field>)\n   */\n  children?: ((props: FieldProps<any>) => React.ReactNode) | React.ReactNode;\n\n  /**\n   * Validate a single field value independently\n   */\n  validate?: ((value: any) => string | Promise<void> | undefined);\n\n  /**\n   * Field name\n   */\n  name: string;\n\n  /** HTML input type */\n  type?: string;\n\n  /** Field value */\n  value?: any;\n\n  /** Inner ref */\n  innerRef?: (instance: any) => void;\n}\n\nexport type FieldAttributes<T> = GenericFieldHTMLAttributes & FieldConfig & T;\n\nexport function useField(name: string, type?: string) {\n  const formik = useFormikContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(\n      formik,\n      'useField() / <Field /> must be used underneath a <Formik> component or withFormik() higher order component'\n    );\n  }\n\n  return formik.getFieldProps(name, type);\n}\n\nexport function Field({\n  validate,\n  name,\n  render,\n  children,\n  component = 'input',\n  ...props\n}: FieldAttributes<any>) {\n  const {\n    validate: _validate,\n    validationSchema: _validationSchema,\n    ...formik\n  } = useFormikContext();\n\n  warning(\n    component && render,\n    'You should not use <Field component> and <Field render> in the same <Field> component; <Field component> will be ignored'\n  );\n\n  warning(\n    component && children && isFunction(children),\n    'You should not use <Field component> and <Field children> as a function in the same <Field> component; <Field component> will be ignored.'\n  );\n\n  warning(\n    render && children && !isEmptyChildren(children),\n    'You should not use <Field render> and <Field children> in the same <Field> component; <Field children> will be ignored'\n  );\n\n  React.useEffect(\n    () => {\n      formik.registerField(name, {\n        validate: validate,\n      });\n      return () => {\n        formik.unregisterField(name);\n      };\n    },\n    [name, validate]\n  );\n  const [field] = formik.getFieldProps(name, props.type);\n  const bag = { field, form: formik };\n\n  if (render) {\n    return render(bag);\n  }\n\n  if (isFunction(children)) {\n    return children(bag);\n  }\n\n  if (typeof component === 'string') {\n    const { innerRef, ...rest } = props;\n    return React.createElement(component, {\n      ref: innerRef,\n      ...field,\n      ...rest,\n      children,\n    });\n  }\n\n  return React.createElement(component, {\n    ...bag,\n    ...props,\n    children,\n  });\n}\nexport const FastField = Field;\n// export const FastField = (React as any).memo(\n//   connect(\n//     ({\n//       formik: _formik,\n//       ...props\n//     }: FieldAttributes<any> & { formik: FormikCtx<any> }) => {\n//       console.log(props['data-testid']);\n//       return <Field {...props} />;\n//     }\n//   ),\n//   (props: any, nextProps: any) => {\n//     return (\n//       Object.keys(nextProps).length === Object.keys(props).length ||\n//       props.formik.isSubmitting === nextProps.formik.isSubmitting ||\n//       props === nextProps ||\n//       getIn(nextProps.formik.values, nextProps.name) ===\n//         getIn(props.formik.values, nextProps.name) ||\n//       getIn(nextProps.formik.errors, nextProps.name) ===\n//         getIn(props.formik.errors, nextProps.name) ||\n//       getIn(nextProps.formik.touched, nextProps.name) ===\n//         getIn(props.formik.touched, nextProps.name)\n//     );\n//   }\n// );\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\nexport function Form(props: FormikFormProps) {\n  const { handleReset, handleSubmit } = useFormikContext();\n  return <form onSubmit={handleSubmit} onReset={handleReset} {...props} />;\n}\n\nForm.displayName = 'Form';\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { Formik } from './Formik';\nimport {\n  FormikHelpers,\n  FormikProps,\n  FormikSharedConfig,\n  FormikValues,\n} from './types';\nimport { isFunction } from './utils';\n\n/**\n * State, handlers, and helpers injected as props into the wrapped form component.\n * Used with withFormik()\n *\n * @deprecated  Use `OuterProps & FormikProps<Values>` instead.\n */\nexport type InjectedFormikProps<Props, Values> = Props & FormikProps<Values>;\n\n/**\n * Formik actions + { props }\n */\nexport type FormikBag<P, V> = { props: P } & FormikHelpers<V>;\n\n/**\n * withFormik() configuration options. Backwards compatible.\n */\nexport interface WithFormikConfig<\n  Props,\n  Values extends FormikValues = FormikValues,\n  DeprecatedPayload = Values\n> extends FormikSharedConfig {\n  /**\n   * Set the display name of the component. Useful for React DevTools.\n   */\n  displayName?: string;\n\n  /**\n   * Submission handler\n   */\n  handleSubmit: (values: Values, formikBag: FormikBag<Props, Values>) => void;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToValues?: (props: Props) => Values;\n\n  /**\n   * Map props to the form values\n   */\n  mapPropsToStatus?: (props: Props) => any;\n\n  /**\n   * @deprecated in 0.9.0 (but needed to break TS types)\n   */\n  mapValuesToPayload?: (values: Values) => DeprecatedPayload;\n\n  /**\n   * A Yup Schema or a function that returns a Yup schema\n   */\n  validationSchema?: any | ((props: Props) => any);\n\n  /**\n   * Validation function. Must return an error object or promise that\n   * throws an error object where that object keys map to corresponding value.\n   */\n  validate?: (values: Values, props: Props) => void | object | Promise<any>;\n}\n\nexport type CompositeComponent<P> =\n  | React.ComponentClass<P>\n  | React.StatelessComponent<P>;\n\nexport interface ComponentDecorator<TOwnProps, TMergedProps> {\n  (component: CompositeComponent<TMergedProps>): React.ComponentType<TOwnProps>;\n}\n\nexport interface InferableComponentDecorator<TOwnProps> {\n  <T extends CompositeComponent<TOwnProps>>(component: T): T;\n}\n\n/**\n * A public higher-order component to access the imperative API\n */\nexport function withFormik<\n  OuterProps,\n  Values extends FormikValues,\n  Payload = Values\n>({\n  mapPropsToValues = (vanillaProps: OuterProps): Values => {\n    let val: Values = {} as Values;\n    for (let k in vanillaProps) {\n      if (\n        vanillaProps.hasOwnProperty(k) &&\n        typeof vanillaProps[k] !== 'function'\n      ) {\n        // @todo TypeScript fix\n        (val as any)[k] = vanillaProps[k];\n      }\n    }\n    return val as Values;\n  },\n  ...config\n}: WithFormikConfig<OuterProps, Values, Payload>): ComponentDecorator<\n  OuterProps,\n  OuterProps & FormikProps<Values>\n> {\n  return function createFormik(\n    Component: CompositeComponent<OuterProps & FormikProps<Values>>\n  ): React.ComponentClass<OuterProps> {\n    const componentDisplayName =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor && Component.constructor.name) ||\n      'Component';\n    /**\n     * We need to use closures here for to provide the wrapped component's props to\n     * the respective withFormik config methods.\n     */\n    class C extends React.Component<OuterProps, {}> {\n      static displayName = `WithFormik(${componentDisplayName})`;\n\n      validate = (values: Values): void | object | Promise<any> => {\n        return config.validate!(values, this.props);\n      };\n\n      validationSchema = () => {\n        return isFunction(config.validationSchema)\n          ? config.validationSchema!(this.props)\n          : config.validationSchema;\n      };\n\n      handleSubmit = (values: Values, actions: FormikHelpers<Values>) => {\n        return config.handleSubmit(values, {\n          ...actions,\n          props: this.props,\n        });\n      };\n\n      /**\n       * Just avoiding a render callback for perf here\n       */\n      renderFormComponent = (formikProps: FormikProps<Values>) => {\n        return <Component {...this.props} {...formikProps} />;\n      };\n\n      render() {\n        const { children, ...props } = this.props as any;\n        return (\n          <Formik\n            {...props}\n            {...config}\n            validate={config.validate && this.validate}\n            validationSchema={config.validationSchema && this.validationSchema}\n            initialValues={mapPropsToValues(this.props)}\n            initialStatus={\n              config.mapPropsToStatus && config.mapPropsToStatus(this.props)\n            }\n            onSubmit={this.handleSubmit as any}\n            render={this.renderFormComponent}\n          />\n        );\n      }\n    }\n\n    return hoistNonReactStatics<\n      React.ComponentType<OuterProps>,\n      React.ComponentType<OuterProps & FormikProps<Values>>\n    >(C, Component) as React.ComponentClass<OuterProps>;\n  };\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContext } from './types';\nimport { FormikConsumer } from './FormikContext';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContext<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => <Comp {...props} formik={formik} />}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics<\n    React.ComponentType<OuterProps>,\n    React.ComponentType<OuterProps & { formik: FormikContext<Values> }>\n  >(\n    C,\n    Comp as React.ComponentClass<OuterProps & { formik: FormikContext<Values> }> // cast type to ComponentClass (even if SFC)\n  );\n}\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContext,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport { getIn, isEmptyChildren, isFunction, setIn } from './utils';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = [...(array || [])];\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (array: any[], indexA: number, indexB: number) => {\n  const copy = [...(array || [])];\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (array: any[], index: number, value: any) => {\n  const copy = [...(array || [])];\n  copy[index] = value;\n  return copy;\n};\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContext<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContext<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n      validateOnChange,\n      formik: { setFormikState, validateForm },\n    } = this.props;\n    setFormikState(\n      (prevState: FormikState<any>) => {\n        let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n        let updateTouched =\n          typeof alterTouched === 'function' ? alterTouched : fn;\n\n        return {\n          ...prevState,\n          values: setIn(\n            prevState.values,\n            name,\n            fn(getIn(prevState.values, name))\n          ),\n          errors: alterErrors\n            ? setIn(\n                prevState.errors,\n                name,\n                updateErrors(getIn(prevState.errors, name))\n              )\n            : prevState.errors,\n          touched: alterTouched\n            ? setIn(\n                prevState.touched,\n                name,\n                updateTouched(getIn(prevState.touched, name))\n              )\n            : prevState.touched,\n        };\n      },\n      () => {\n        if (validateOnChange) {\n          validateForm();\n        }\n      }\n    );\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (array: any[]) => [...(array || []), cloneDeep(value)],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? [...array] : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n        ? (render as any)(props)\n        : children // children come last, always called\n          ? typeof children === 'function'\n            ? (children as any)(props)\n            : !isEmptyChildren(children) ? React.Children.only(children) : null\n          : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContext } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: ((errorMessage: string) => React.ReactNode);\n  render?: ((errorMessage: string) => React.ReactNode);\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContext<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContext<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render) ? render(error) : null\n        : children\n          ? isFunction(children) ? children(error) : null\n          : component\n            ? React.createElement(component, rest as any, error)\n            : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContext<any> }\n>(ErrorMessageImpl);\n"],"names":["isNaN","React.Children","React.createContext","React.useContext","React.useRef","React.useCallback","React.useEffect","React.useMemo","React.createElement","tslib_1.__extends","React.Component"],"mappings":"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"}